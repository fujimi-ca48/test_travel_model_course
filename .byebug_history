exit
spot_items.first['recommended_spot_id']
first_recommended_spot_id
exit
recommended_spot.img
image_url
recommended_spot && recommended_spot.img.present?
recommended_spot
recommended_spot_id
exit
recommended_spot
recommended_spot_id
image_url
exit
@recommended_spot.save
recommended_spot_params
exit
recommended_spot_id
 RecommendedSpot.find_by(id: recommended_spot_id)
recommended_spot
exit
@total_spot_item.update(total_spot_item_params)
exit
 @total_spot_item.errors.full_messages
@total_spot_item.update(total_spot_item_params)
@total_spot_item.errors.full_messages
@total_spot_item
exit
@total_spot_item.errors.full_messages
@total_spot_item.update.errors.full_messages
total_spot_item_params
@total_spot_item.update(total_spot_item_params)
@total_spot_item
exit
total_spot_item_params
 @total_spot_item.update(total_spot_item_params)
exit
 @total_spot_item.update(total_spot_item_params)
@total_spot_item
exit
@total_spot_item
exit
 @total_spot_item
exit
total_spot_item_params
@total_spot_item
exit
@total_spot_item
total_spot_item_params
exit
total_spot_item_params
current_user.total_spot_items
exit
params[:id].to_i
params[:id]
params[:id
current_user.total_spot_items
@total_spot_item.errors.full_messages
 @total_spot_item.errors.full_messages
 @total_spot_item 
exit
@total_spot_item.errors.full_messages
@total_spot_item
current_user.total_spot_items
exit
params[:id]
params
@total_spot_item.errors.full_messages
current_user.total_spot_items
 @total_spot_item
exit
     @total_spot_item 
exit
@total_spot_item
exit
 @total_spot_item
exit
current_user.total_spot_items.find(params[:id])
@total_spot_item
 @total_spot_item
exit
sorted_ids
exit
params[:sorted_ids]
 sorted_ids
exit
@spot_items
exit
 @spot_items
JSON.parse(@model_course.spot_item_data)
@model_course.spot_item_data
@model_course
model_course.spot_item_data
 @spot_items
exit
JSON.parse(spot_item_data)
spot_item_data
exit
JSON.parse(@model_course.spot_item_data)
@model_course.spot_item_data
exit
spot_item_data_array
 @model_course
@model_course.spot_item_data_array
@spot_items
exit
 @model_course.save
exit
exot
 @model_course.save
exit
selected_total_spot_items
current_user.total_spot_items.to_a
exit
selected_total_spot_items
current_user.total_spot_items.to_a
exit
 @model_course
current_user.total_spot_items
exit
ext
 @model_course
exit
 current_user.total_spot_items.to_a
selected_total_spot_items 
exit
current_user.total_spot_items
selected_total_spot_items
@model_course
exit
item
 @model_course.spot_items
 current_user.total_spot_items
exit
item
current_user.total_spot_items
current_user.total_spot_item
@model_course
exit
current_user.total_spot_items
 @model_course
 @model_cours
exit
item
@total_spot_items
item
 @total_spot_items
exit
 @model_course.total_spot_items
@total_spot_items
 @model_course
exit
 @total_spot_items
exit
@model_course
exit
 @total_spot_items 
 @model_course
exit
@model_course
@model_course.class
@model_course.save
 @model_course.errors.full_messages
exit
@model_course
exit
@model_course
exit
@model_couser
@model_course
exit
@model_course
@model_course 
@model_couser 
exit
 @model_course
exit
@model_course.total_spot_items.build(total_spot_items_checkout)
 @model_course
@model_course
exit
@model_course.errors.full_messages
@model_course
exit
model_course_params
@total_spot_items
@model_course
exit
 @model_course.transportation 
@model_course.duration
@model_course
@model_course.
exit
 @model_course
exit
@model_course.errors.full_messages
  flash[:error] = "Failed to create Model Course."
(byebug)  @model_course
#<ModelCourse id: nil, user_id: nil, tourist_spot_id: 1, recommended_spot_id: nil, name: nil, all_time: nil, duration: 1, transportation: 1, created_at: nil, updated_at: nil>
(byebug)  @model_course.errors.full_messages
[]
 @model_course.save.errors_full_messages
 @model_course.save.errors.full_messages
 @model_course.save
 @model_course.errors.full_messages
 @model_course
exit
if @total_spot_item.update(total_spot_item_params)
total_spot_item_params
@total_spot_item
exit
       existing_item 
exit
@spot_item.errors.full_messages
@spot_item.save
@spot_item
exit
@spot_item
 existing_item
exit
@selected_spots
exit
       @selected_spots
exit
user_spot_selections
@selected_spots
exit
 if spot_params.key?("recommended_spot_id")
 selected_spots
exit
model_course_params
exit
model_course_params
exit
@selected_spots
tourist_spot
recommended_spot
exit
@selected_spots
exit
 @selected_spots
@selected_spots
tourist_spot_id: selection[:tourist_spot_id]
recommended_spot_id: selection[:recommended_spot_id],
@selected_spots
@selected_spots.errors_full_messages
@selected_spots.errors.full_messages
 @selected_spots.errors_full_messages
 @selected_spots.errors.full_messages
 @selected_spots
exit
current_user.myspot_items
current_user.spot_items
@selected_spots
user_spot_selections 
exit

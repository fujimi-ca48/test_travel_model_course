c
 S3_BUCKET.presigned_post(key: "uploads/#{SecureRandom.uuid}/${filename}", success_action_status: '201', acl: 'public-read')
 @s3_direct_post
c
@s3_direct_post
c
count
c
current_user.total_spot_items.count
count
exit
e4xit
exit
@model_course.prefecture
c
f.object.transportation 
options_for_select(TotalSpotItem.transportations.map { |k, v| [t("enums.total_spot_item.transportation.#{k}"), k] }, f.object.transportation), {}, { selected: f.object.transportation }
TotalSpotItem.transportations
enums.total_spot_item.transportation
k
f.object.transportation
c
@search_results
query
c
params[:query]
c
params[:query]
c
input
c
input
data: { autocomplete_target: "input" }
exit
 params[:query]
input
inpt
autocomplete_target: "input"
autocomplete_target: "input
c
params[:query]
c
render json: { results: @search_results }
@search_results
query
c
TouristSpot.where('name LIKE ?', "%#{query}%").pluck(:name
 @search_results
query
params[:q]
c
 @search_results
c
TouristSpot.where('name LIKE ?', "%#{query}%")
TouristSpot.where('name LIKE ?', "%#{query}%").pluck(:name)
query
params[:q]
 @search_results
c
 @search_results
c
@search_results
c
@search_results 
c
params[:query]
c
@search_results
params[:query]
c
params[:query]
query
c
params[:tourist_spot_id]
query 
c
 query
c
params[:query]
c
params[:query]
c
data-autocomplete-url-value="/tourist_spots/search"
params[:query]
c
params[:query]
c
params[:query]
TouristSpot.where('name LIKE ?', "%#{params[:query]}%")
c
query = params[:query]
@searched_tourist_spots
c
params[:query]
query
c
TouristSpot.where('name LIKE ?', "%#{query}%")
@searched_tourist_spots
params[:query]
query
c
@searched_tourist_spots
query
c
params[:query]
query
c
 @searched_tourist_spots
 query
c
params[:query]
query
c
params[:query]
query
c
query
c
params[:query]
c
params[:query]
query
@search_results
c
 @search_result
query
c
total_spot_item_params
 @total_spot_item
c
 @total_spot_item
total_spot_item_params
c
total_spot_item_params
 params[:total_spot_item][:transportation]
TotalSpotItem.transportations[params[:total_spot_item][:transportation]].to_i
c
TotalSpotItem.transportations[params[:total_spot_item][:transportation]].to_i
params[:total_spot_item][:transportation].to_i
c
TotalSpotItem.transportations[params[:total_spot_item][:transportation]].to_i
params[:total_spot_item][:transportation]
c
 @total_spot_item
total_spot_item_params
c
params[:total_spot_item][:transportation].to_i
total_spot_item_params
c
total_spot_item_param
params[:total_spot_item][:transportation]
c
total_spot_item_params
 params[:total_spot_item][:transportation]
params[:total_spot_item][:transportation].to_i
c
params[:total_spot_item][:transportation].to_i
params[:total_spot_item][:transportation]
c
total_spot_item_params
params[:total_spot_item][:transportation]
c
 @total_spot_item
total_spot_item_params
c
 @total_spot_item.transportation
 @total_spot_item.update(total_spot_item_params)
total_spot_item_params
 @total_spot_item
c
total_spot_item_params
@total_spot_item
c
@total_spot_item
total_spot_item_params
c
total_spot_item_params
c
total_spot_item_params
c
exit
total_spot_item_params
c
total_spot_item_params
c
total_spot_item_params
if @total_spot_item.update(total_spot_item_params)
c
total_spot_item_params
if @total_spot_item.update(total_spot_item_params)
c
total_spot_item_params
@total_spot_item
c
total_spot_item_params
c
total_spot_item_params
c
 model: f.object
shared/error_messages
c
 @recommended_spot.errors.full_messages
 @recommended_spot.errors
 @recommended_spot
c
 @recommended_spot.errors
 @recommended_spot.errors.full_messages
c
tourist_spot
tourist_spots
tourist_spot.name
exit
tourist_spot.name
exit
 <ul class="list-group" data-autocomplete-target="results"></ul>
data-autocomplete-target="results"></ul>
exit
tourist_spot.name
exit
tourist_spot
tourist_spots
tourist_spot.name
exit
cccexit
exit
tourist_spot
tourist_spot.name
tourist_spots
exit
@tourist_spots
params[:query]
exit
qqq
exit
@tourist_spots
params[:query]
query
exit
result
 @search_results
exit
 @tourist_spots
@tourist_spots.pluck(:name)
 @search_results
exit
TouristSpot.where('name LIKE ?', "%#{@q}%").page(params[:page]).per(12)
 @tourist_spots
 @q
params[:query]
exit
params[:query]
@tourist_spots
exit
params[:query]
 @q
c

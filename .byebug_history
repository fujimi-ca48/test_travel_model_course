c
params[:q]
c
params([:q])
params([:q]
@q
c
@q
c
search_params
@q
c
search_params
@q.result
@q.ransack(search_params)
@q
 @q = ModelCourse.ransack(search_params)
search_params
@q
 @model_courses
c
 @model_courses
c
@q.result(distinct: true)
@q.result
 @model_courses
search_params
 @q
c
@q
search_params
c
search_param
c
params[:q]
 @q
c
params[:q]
 @q
c
@q
ModelCourse.ransack(params[:q])
 @q
params[:q]
(params[:q]
c
@q
params[:q]
c
params[:q]
@q 
exit
c
if model_course.prefecture.present?
model_course.prefecture
model_course
@model_courses
exit
c
model_course.prefecture
c
model_course.prefecture
model_course
exit
cc
c
model_course.prefecture
exit
c
model_course.prefecture
model_course
@model_courses
c
 @model_courses
c
@model_course.vehicle
c
 most_common_transportation
c
selected_total_spot_items
 transportation_counts
most_common_transportation_key
c
selected_total_spot_items.group_by { |item| TotalSpotItem.transportations.key(item.transportation) }.transform_values(&:count)
selected_total_spot_items.group_by { |item| TotalSpotItem.transportations.key(item.transportation) }
TotalSpotItem.transportations
item
selected_total_spot_items
selected_total_spot_items.group_by { |item| TotalSpotItem.transportations.key(item.transportation) }.transform_values(&:count)
selected_total_spot_items
transportation_counts
most_common_transportation_key
@model_course.vehicle
c
exit
options_for_select(TotalSpotItem.transportations.map { |k, v| [t("enums.total_spot_item.transportation.#{k}"), k] }, f.object.transportation)
f.object.transportation
c
 options_for_select(TotalSpotItem.transportations.map { |k, v| [t("enums.total_spot_item.transportation.#{k}"), k] }
v
f.object.transportation
options_for_select(TotalSpotItem.transportations)
f.object.transportation
c
@total_spot_item
c
@total_spot_item.save
 @total_spot_item
c
@total_spot_item.save
c
@search_results
query
c
params[:query]
c
params[:query]
c
input
c
input
data: { autocomplete_target: "input" }
exit
 params[:query]
input
inpt
autocomplete_target: "input"
autocomplete_target: "input
c
params[:query]
c
render json: { results: @search_results }
@search_results
query
c
TouristSpot.where('name LIKE ?', "%#{query}%").pluck(:name
 @search_results
query
params[:q]
c
 @search_results
c
TouristSpot.where('name LIKE ?', "%#{query}%")
TouristSpot.where('name LIKE ?', "%#{query}%").pluck(:name)
query
params[:q]
 @search_results
c
 @search_results
c
@search_results
c
@search_results 
c
params[:query]
c
@search_results
params[:query]
c
params[:query]
query
c
params[:tourist_spot_id]
query 
c
 query
c
params[:query]
c
params[:query]
c
data-autocomplete-url-value="/tourist_spots/search"
params[:query]
c
params[:query]
c
params[:query]
TouristSpot.where('name LIKE ?', "%#{params[:query]}%")
c
query = params[:query]
@searched_tourist_spots
c
params[:query]
query
c
TouristSpot.where('name LIKE ?', "%#{query}%")
@searched_tourist_spots
params[:query]
query
c
@searched_tourist_spots
query
c
params[:query]
query
c
 @searched_tourist_spots
 query
c
params[:query]
query
c
params[:query]
query
c
query
c
params[:query]
c
params[:query]
query
@search_results
c
 @search_result
query
c
total_spot_item_params
 @total_spot_item
c
 @total_spot_item
total_spot_item_params
c
total_spot_item_params
 params[:total_spot_item][:transportation]
TotalSpotItem.transportations[params[:total_spot_item][:transportation]].to_i
c
TotalSpotItem.transportations[params[:total_spot_item][:transportation]].to_i
params[:total_spot_item][:transportation].to_i
c
TotalSpotItem.transportations[params[:total_spot_item][:transportation]].to_i
params[:total_spot_item][:transportation]
c
 @total_spot_item
total_spot_item_params
c
params[:total_spot_item][:transportation].to_i
total_spot_item_params
c
total_spot_item_param
params[:total_spot_item][:transportation]
c
total_spot_item_params
 params[:total_spot_item][:transportation]
params[:total_spot_item][:transportation].to_i
c
params[:total_spot_item][:transportation].to_i
params[:total_spot_item][:transportation]
c
total_spot_item_params
params[:total_spot_item][:transportation]
c
 @total_spot_item
total_spot_item_params
c
 @total_spot_item.transportation
 @total_spot_item.update(total_spot_item_params)

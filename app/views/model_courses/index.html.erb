<%= stylesheet_link_tag 'custom', media: 'all', 'data-turbolinks-track': 'reload' %>

<div class="py-6 sm:py-8 lg:py-12">
  <div class="mx-auto max-w-screen-2xl px-4 md:px-8">
    <div class="mb-10 md:mb-16" style="margin-top: 20px;">
      <h2 class="mb-4 text-center text-2xl font-bold text-gray-800 md:mb-6 lg:text-3xl"><%= t('.title') %></h2>
    </div>

    <div class="flex justify-center">
      <%= search_form_for @q, url: model_courses_path, method: :get, id: 'search-form', class: "flex items-center" do |f| %>
        <%= f.select :prefecture_eq, ModelCourse.prefectures, { include_blank: "都道府県を選択" }, { class: "px-4 py-2 border rounded-md" } %>
        <%= f.select :vehicle_eq, options_for_select(ModelCourse.vehicles_i18n.map { |key, value| [value, key] }, params[:q]&.dig(:vehicle_eq)), { include_blank: "移動手段を選択" }, { class: "px-4 py-2 border rounded-md" } %>
        <%= f.submit "検索", class: "btn btn-accent ml-2" %>
      <% end %>
    </div>
  
    <div class="flex justify-center">  
      <% if @no_results %>
        <p class="text-gray-500">検索結果がありません</p>
      <% end %>
    </div>

    <div class="mt-8"></div>
    <div class="grid gap-4 sm:grid-cols-2 md:gap-6 lg:grid-cols-3 xl:grid-cols-4 xl:gap-8">
      <%= render partial: 'model_courses/model_course' %>
    </div>

    <div class="mt-8"></div>
    <div class="flex justify-center mt-4">
      <%= paginate @model_courses %>
    </div>
  </div>
</div>

<% @model_courses.each do |model_course| %>
  <div class="modal js-modal">
    <div class="modal-container">
      <!-- モーダルを閉じるボタン -->
      <div class="modal-close js-modal-close">×</div>
      <!-- モーダル内部のコンテンツ -->
      <div class="modal-content">
        <p>モデルコースの投稿してくれてありがとう🎉✨</p>
        <p>投稿したモデルコースをTwitterでも共有しよう！</p>
        <% set_meta_tags og: { image: image_url(@tweet_image_url) }, twitter: { image: image_url(@tweet_image_url) } %>
        <%= link_to "https://twitter.com/share?url=#{ model_course_url(@latest_model_course) }&text=#{@latest_model_course.user.name}さんが「#{@latest_model_course.name}」を投稿しました！%0A&hashtags=TravelModelCourse", class: 'twitter-share-button', 'data-show-count' => 'false', target: '_blank' do %>
           Tweet
        <% end %>
        <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
      </div>
    </div>
  </div>
<% end %>

<script>
  // モーダルを開く関数
  function modalOpen() {
    const modal = document.querySelector('.js-modal');
    modal.classList.add('is-active');
  }

  // モーダルを閉じる関数
  function modalClose() {
    const modal = document.querySelector('.js-modal');
    modal.classList.remove('is-active');
  }

  // バツ印がクリックされた時
const buttonClose = document.querySelector('.js-modal-close');
buttonClose.addEventListener('click', function () {
  const modal = document.querySelector('.js-modal');
  modal.style.display = 'none';
  body.classList.remove('open');
});


// モーダルコンテンツ以外がクリックされた時
const modal = document.querySelector('.js-modal');
modal.addEventListener('click', function (event) {
  if (event.target === modal) {
    modal.style.display = 'none';
    body.classList.remove('open');
  }
});


  // URLからクエリパラメーターを取得する関数
  function getQueryParams() {
    const queryParams = new URLSearchParams(window.location.search);
    return queryParams;
  }

  // 一覧画面が読み込まれた際にモーダルを表示
  window.addEventListener('load', function () {
    // クエリパラメーターから show_modal の値を取得
    const queryParams = getQueryParams();
    const showModal = queryParams.get('show_modal');

    // show_modal が true の場合にモーダルを開く
    if (showModal === 'true') {
      modalOpen();
    }
  });

  // ページが読み込まれたときにモーダルを表示
  window.addEventListener('load', function () {
    modalOpen();
  });
</script>

<style>
.modal-open {
  position: fixed;
  top: 50%;
  left: 50%;
  font-size: 16px;
  font-weight: bold;
  width: 300px;
  height: 60px;
  color: #fff;
  background: #000;
  border: none;
  cursor: pointer;
  transform: translate(-50%, -50%); /* 中央に配置 */
}

/* モーダルと背景の指定 */
.modal{
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  text-align: center;
  background: rgba(0,0,0,50%);
  padding: 40px 20px;
  overflow: auto;
  opacity: 0;
  visibility: hidden;
  transition: .3s;
  box-sizing: border-box;
}


/* モーダルの擬似要素の指定 */
.modal:before{
  content: "";
  display: inline-block;
  vertical-align: middle;
  height: 100%;
  margin-left: -0.2em;
}

/* クラスが追加された時の指定 */
.modal.is-active{
  opacity: 1;
  visibility: visible;
}

/* モーダル内側の指定 */
.modal-container{
  position: relative;
  display: inline-block;
  vertical-align: middle;
  max-width: 600px;
  width: 90%;
}

/* モーダルを閉じるボタンの指定 */
.modal-close{
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  top: -20px;
  right: -20px;
  width: 40px;
  height: 40px;
  color: #fff;
  background: #000;
  border-radius: 50%;
  cursor: pointer;
}

/* モーダルのコンテンツ部分の指定 */
.modal-content{
  background: #fff;
  text-align: left;
  line-height: 1.8;
  padding: 20px;
}

/* モーダルのコンテンツ部分のテキストの指定 */
.modal-content p{
  margin: 1em 0;
}
</style>
